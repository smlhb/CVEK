% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_kernel.R
\name{generate_kernel}
\alias{generate_kernel}
\title{Generating A Single Kernel}
\usage{
generate_kernel(method = "rbf", Sigma = 0, l = 1, p = 2)
}
\arguments{
\item{method}{(character) A character string indicating which kernel 
is to be computed.}

\item{Sigma}{(matrix) The covariance matrix for neural network kernel.}

\item{l}{(numeric) A numeric number indicating the hyperparameter 
(flexibility) of a specific kernel.}

\item{p}{(integer) For polynomial, p is the power; for matern, v = p + 1 / 2; for
rational, alpha = p.}
}
\value{
\item{kern}{(function) A function indicating the generated kernel.}
}
\description{
Generate kernels for the kernel library.
}
\details{
There are seven kinds of kernel available here. For convenience, we define
\eqn{r=\mid x-x'\mid}.

\bold{Gaussian RBF Kernels} \deqn{k_{SE}(r)=exp\Big(-\frac{r^2}{2l^2}\Big)}

\bold{Matern Kernels}
\deqn{k_{Matern}(r)=\frac{2^{1-\nu}}{\Gamma(\nu)}\Big(\frac{\sqrt{2\nu
r}}{l}\Big)^\nu K_\nu \Big(\frac{\sqrt{2\nu r}}{l}\Big)}

\bold{Rational Quadratic Kernels} \deqn{k_{RQ}(r)=\Big(1+\frac{r^2}{2\alpha
l^2}\Big)^{-\alpha}}

\bold{Polynomial Kernels} \deqn{k(x, x')=(x \cdot x')^p} We have intercept
kernel when \eqn{p=0}, and linear kernel when \eqn{p=1}.

\bold{Neural Network Kernels} \deqn{k_{NN}(x,
x')=\frac{2}{\pi}sin^{-1}\Big(\frac{2\tilde{x}^T\Sigma
\tilde{x}'}{\sqrt{(1+2\tilde{x}^T\Sigma \tilde{x})(1+2\tilde{x}'^T\Sigma
\tilde{x}')}}\Big)}
}
\examples{


kern_list <- list()
for (d in 1:nrow(kern_par)) {
  kern_list[[d]] <- generate_kernel(kern_par[d, ]$method,
                                    kern_par[d, ]$Sigma,
                                    kern_par[d, ]$l,
                                    kern_par[d, ]$p)
}


}
\references{
The MIT Press. Gaussian Processes for Machine Learning, 2006.
}
\author{
Wenying Deng
}
